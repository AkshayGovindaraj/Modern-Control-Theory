clc
clear all
close all

xo = 100*ones(5,1) ; % The initial point

% Assumption on the first control move
u0 = rand(2,10);
% u(1,:) = 0;

AA = [0.977761390791996,0.00150731043977111,0.000117641667469991,-0.000176422685625943,0.00129501905548826;
       -0.0456820058180613,1.00557475312109,0.0112938229265131,0.00841260181514146,-0.00592279211589980;
       0.239135558663006,-0.122005380238823,0.877340272569456,-0.0875887698244175,-0.170396289513480;
       -0.0619203332816622,-0.0554430260535420,-0.694358818693494,0.458588285274319,-0.509318375811164;
       -0.0992939667859705,0.0747001069524178,0.228079231663078,0.197952920700409,-0.506199768037661];

B =[5.52327568369997e-05,-0.000283816899255185;
    0.00549612262032187,-0.000221157076027192;
    -0.219358648611253,-0.0122772811617940;
    -1.09329939486152,-0.0699701353719596;
    -0.825582460356569,-0.0530680141005799];

ysp = transpose([0 0 1 1 1]);

 %C = zeros(22,22);
 %b = ones(1,22);   % To validate constraints
lb = -Inf*ones(2,10);
ub = Inf*ones(2,10);

fval = 1;

for i = 1:1000
 
   % options = optimoptions('fminunc','Algorithm','trust-region'); %,'GradObj','on');
    options = optimoptions(@fmincon,'GradObj','on');
    
 [m, fval] = fmincon(@(u0)mpcform(u0,xo,ysp),u0,[],[],[],[],lb,ub,[],options) %,options) ;%,[],[],[],[],lb,ub)
 
 %  fmincon(@(x) myfun(x,a1),[1;2],[],[],[],[],[],[],@(x) mycon(x,a2),options)
 

 xo = AA*xo + B*(m(:,1))
 
for i = 1:9
    %xo = AA*xo + B*transpose(m(i,:)) 
    u0(:,i) = m(:,i+1);
    
end

u0(:,6) = 0;

 end
 
 